This is an effcient approach because the time complexity of this solution is O(n)2.As the matrix is sorted matrix, so we can write an effcient code. We start searching element from the top last corner of matrix.Let's say we start at 0,3 having a value of 40. So, we compare 32 with 40 and see whether 32 is equal to 40 or not. If it is equal 40 the simply print we found our element at 0,3.If 32<40, so the idea behind the algorithm is if we go to the left of 40 we will find all the numbers lesser then 40 and if we go below 40 then we will find number greater then 40.So, as it is row wise and column wise sorted matrix for each and every element in this matrix this property holds true.
We will use this idea and search for particular key in matrix.While writing searching logic, we are providing the while loop and in while loop we are providing the boundary condition of the matrix, so that value of i and j do not cross over matrix boundary.

In addition to this, in the program, the value of i will be iterating over indexes of the rows and the value of j will be iterating over the indexes of the columns.